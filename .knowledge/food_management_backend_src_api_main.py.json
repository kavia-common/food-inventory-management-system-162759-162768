{"is_source_file": true, "format": "Python", "description": "Main backend implementation for the Food Inventory Management API using FastAPI. It includes user authentication, CRUD operations for food items, expiry notifications, and reporting functionalities. It also defines data models, in-memory data storage, and security helpers.", "external_files": ["fastapi", "pydantic", "fastapi.middleware.cors", "fastapi.security", "jose", "passlib"], "external_methods": ["jwt.encode", "jwt.decode", "CryptContext.verify", "CryptContext.hash"], "published": ["health_check", "signup", "login_for_access_token", "create_food", "list_food", "get_food", "update_food", "delete_food", "list_expiry_notifications", "acknowledge_notification", "get_summary_report", "websocket_usage"], "classes": [{"name": "Token", "description": "JWT token response model containing access token and token type."}, {"name": "UserBase", "description": "Base model for user data with email and optional full name."}, {"name": "UserCreate", "description": "Model for user registration including password."}, {"name": "User", "description": "User representation with ID, email, and full name."}, {"name": "UserInDB", "description": "User model including hashed password, stored in the database."}, {"name": "FoodBase", "description": "Base model for food items with details like name, quantity, expiry date, etc."}, {"name": "FoodCreate", "description": "Model for creating new food items."}, {"name": "FoodUpdate", "description": "Model for partial update of food items."}, {"name": "Food", "description": "Complete food item model including ID, owner info, timestamps."}, {"name": "ExpiryNotification", "description": "Notification model for expiring food items."}, {"name": "ReportSummary", "description": "Summary report containing total counts, groupings, and expiry stats."}, {"name": "InMemoryDB", "description": "Placeholder class providing in-memory data storage and CRUD operations for users, foods, and notifications."}], "methods": [{"name": "verify_password", "description": "Verifies a plain password against a hashed password."}, {"name": "str get_password_hash(password: str)", "description": "Hashes a plain password.", "scope": "", "scopeKind": ""}, {"name": "str create_access_token(data: dict, expires_delta: Optional[timedelta] = None)", "description": "Generates a JWT token with expiration.", "scope": "", "scopeKind": ""}, {"name": "UserInDB get_current_user(token: str = Depends(oauth2_scheme))", "description": "Dependency that retrieves the current user from the JWT token.", "scope": "", "scopeKind": ""}, {"name": "None _maybe_create_expiry_notification(food: Food)", "description": "Creates an expiry notification if the food expires within the threshold.", "scope": "", "scopeKind": ""}, {"name": "__init__(self)", "scope": "InMemoryDB", "scopeKind": "class", "description": "unavailable"}, {"name": "Optional[ExpiryNotification] acknowledge_notification(self, notification_id: str, owner_id: str)", "scope": "InMemoryDB", "scopeKind": "class", "description": "unavailable"}, {"name": "ExpiryNotification acknowledge_notification( notification_id: str = Path(..., description=\"Notification id\"), body: NotificationAckRequest = None, current_user: UserInDB = Depends(get_current_user), )", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "Food create_food(self, owner_id: str, data: FoodCreate)", "scope": "InMemoryDB", "scopeKind": "class", "description": "unavailable"}, {"name": "Food create_food(food: FoodCreate, current_user: UserInDB = Depends(get_current_user))", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "ExpiryNotification create_notification(self, owner_id: str, food_id: str, message: str, due_date: date)", "scope": "InMemoryDB", "scopeKind": "class", "description": "unavailable"}, {"name": "UserInDB create_user(self, email: str, full_name: Optional[str], hashed_password: str)", "scope": "InMemoryDB", "scopeKind": "class", "description": "unavailable"}, {"name": "bool delete_food(self, food_id: str)", "scope": "InMemoryDB", "scopeKind": "class", "description": "unavailable"}, {"name": "None delete_food( food_id: str, current_user: UserInDB = Depends(get_current_user), )", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "Optional[Food] get_food(self, food_id: str)", "scope": "InMemoryDB", "scopeKind": "class", "description": "unavailable"}, {"name": "Food get_food( food_id: str = Path(..., description=\"ID of the food item\"), current_user: UserInDB = Depends(get_current_user), )", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "ReportSummary get_summary_report(current_user: UserInDB = Depends(get_current_user))", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "Optional[UserInDB] get_user(self, user_id: str)", "scope": "InMemoryDB", "scopeKind": "class", "description": "unavailable"}, {"name": "Optional[UserInDB] get_user_by_email(self, email: str)", "scope": "InMemoryDB", "scopeKind": "class", "description": "unavailable"}, {"name": "Dict[str,str] health_check()", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "List[ExpiryNotification] list_expiry_notifications( only_pending: bool = Query(True, description=\"Filter only pending (unacknowledged) notifications\"), current_user: UserInDB = Depends(get_current_user), )", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "List[Food] list_food( q: Optional[str] = Query(None, description=\"Search term on name\"), category: Optional[str] = Query(None, description=\"Filter by category\"), location: Optional[str] = Query(None, description=\"Filter by storage location\"), expiring_before: Optional[date] = Query(None, description=\"Filter by expiry date upper bound (YYYY-MM-DD)\"), skip: int = Query(0, ge=0, description=\"Pagination offset\"), limit: int = Query(50, ge=1, le=200, description=\"Pagination limit\"), current_user: UserInDB = Depends(get_current_user), )", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "List[Food] list_foods( self, owner_id: str, q: Optional[str] = None, category: Optional[str] = None, location: Optional[str] = None, expiring_before: Optional[date] = None, skip: int = 0, limit: int = 50, )", "scope": "InMemoryDB", "scopeKind": "class", "description": "unavailable"}, {"name": "List[ExpiryNotification] list_notifications(self, owner_id: str, only_pending: bool = True)", "scope": "InMemoryDB", "scopeKind": "class", "description": "unavailable"}, {"name": "Token login_for_access_token(form_data: OAuth2PasswordRequestForm = Depends())", "scope": "", "scopeKind": "", "description": "unavailable"}], "calls": ["jwt.encode", "jwt.decode", "pwd_context.verify", "pwd_context.hash", "create_access_token", "db.get_user_by_email", "db.create_user", "db.get_user", "db.create_food", "db.get_food", "db.list_foods", "db.update_food", "db.delete_food", "db.create_notification", "db.list_notifications", "db.acknowledge_notification"], "search-terms": ["FastAPI", "JWT", "food inventory", "expiry notifications", "user authentication", "in-memory database", "food CRUD", "reporting"], "state": 2, "file_id": 2, "knowledge_revision": 10, "git_revision": "84097b2d3cae7454bebf60d18fb8890cd26ab284", "revision_history": [{"9": "84097b2d3cae7454bebf60d18fb8890cd26ab284"}, {"10": "84097b2d3cae7454bebf60d18fb8890cd26ab284"}], "ctags": [{"_type": "tag", "name": "APP_DESCRIPTION", "path": "/home/kavia/workspace/code-generation/food-inventory-management-system-162759-162768/food_management_backend/src/api/main.py", "pattern": "/^APP_DESCRIPTION = ($/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "APP_TITLE", "path": "/home/kavia/workspace/code-generation/food-inventory-management-system-162759-162768/food_management_backend/src/api/main.py", "pattern": "/^APP_TITLE = \"Food Inventory Management API\"$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "APP_VERSION", "path": "/home/kavia/workspace/code-generation/food-inventory-management-system-162759-162768/food_management_backend/src/api/main.py", "pattern": "/^APP_VERSION = \"1.0.0\"$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "EXPIRY_THRESHOLD_DAYS", "path": "/home/kavia/workspace/code-generation/food-inventory-management-system-162759-162768/food_management_backend/src/api/main.py", "pattern": "/^EXPIRY_THRESHOLD_DAYS = int(os.getenv(\"EXPIRY_THRESHOLD_DAYS\", \"7\"))$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "ExpiryNotification", "path": "/home/kavia/workspace/code-generation/food-inventory-management-system-162759-162768/food_management_backend/src/api/main.py", "pattern": "/^class ExpiryNotification(BaseModel):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "Food", "path": "/home/kavia/workspace/code-generation/food-inventory-management-system-162759-162768/food_management_backend/src/api/main.py", "pattern": "/^class Food(FoodBase):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "FoodBase", "path": "/home/kavia/workspace/code-generation/food-inventory-management-system-162759-162768/food_management_backend/src/api/main.py", "pattern": "/^class FoodBase(BaseModel):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "FoodCreate", "path": "/home/kavia/workspace/code-generation/food-inventory-management-system-162759-162768/food_management_backend/src/api/main.py", "pattern": "/^class FoodCreate(FoodBase):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "FoodUpdate", "path": "/home/kavia/workspace/code-generation/food-inventory-management-system-162759-162768/food_management_backend/src/api/main.py", "pattern": "/^class FoodUpdate(BaseModel):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "InMemoryDB", "path": "/home/kavia/workspace/code-generation/food-inventory-management-system-162759-162768/food_management_backend/src/api/main.py", "pattern": "/^class InMemoryDB:$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "JWT_ACCESS_TOKEN_EXPIRE_MINUTES", "path": "/home/kavia/workspace/code-generation/food-inventory-management-system-162759-162768/food_management_backend/src/api/main.py", "pattern": "/^JWT_ACCESS_TOKEN_EXPIRE_MINUTES = int(os.getenv(\"JWT_ACCESS_TOKEN_EXPIRE_MINUTES\", \"60\"))$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "JWT_ALGORITHM", "path": "/home/kavia/workspace/code-generation/food-inventory-management-system-162759-162768/food_management_backend/src/api/main.py", "pattern": "/^JWT_ALGORITHM = os.getenv(\"JWT_ALGORITHM\", \"HS256\")$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "JWT_SECRET_KEY", "path": "/home/kavia/workspace/code-generation/food-inventory-management-system-162759-162768/food_management_backend/src/api/main.py", "pattern": "/^JWT_SECRET_KEY = os.getenv(\"JWT_SECRET_KEY\", \"dev-secret-change-in-production\")$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "NotificationAckRequest", "path": "/home/kavia/workspace/code-generation/food-inventory-management-system-162759-162768/food_management_backend/src/api/main.py", "pattern": "/^class NotificationAckRequest(BaseModel):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "ReportSummary", "path": "/home/kavia/workspace/code-generation/food-inventory-management-system-162759-162768/food_management_backend/src/api/main.py", "pattern": "/^class ReportSummary(BaseModel):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "Token", "path": "/home/kavia/workspace/code-generation/food-inventory-management-system-162759-162768/food_management_backend/src/api/main.py", "pattern": "/^class Token(BaseModel):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "User", "path": "/home/kavia/workspace/code-generation/food-inventory-management-system-162759-162768/food_management_backend/src/api/main.py", "pattern": "/^class User(UserBase):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "UserBase", "path": "/home/kavia/workspace/code-generation/food-inventory-management-system-162759-162768/food_management_backend/src/api/main.py", "pattern": "/^class UserBase(BaseModel):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "UserCreate", "path": "/home/kavia/workspace/code-generation/food-inventory-management-system-162759-162768/food_management_backend/src/api/main.py", "pattern": "/^class UserCreate(UserBase):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "UserInDB", "path": "/home/kavia/workspace/code-generation/food-inventory-management-system-162759-162768/food_management_backend/src/api/main.py", "pattern": "/^class UserInDB(User):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "__init__", "path": "/home/kavia/workspace/code-generation/food-inventory-management-system-162759-162768/food_management_backend/src/api/main.py", "pattern": "/^    def __init__(self):$/", "language": "Python", "kind": "member", "signature": "(self)", "scope": "InMemoryDB", "scopeKind": "class"}, {"_type": "tag", "name": "_maybe_create_expiry_notification", "path": "/home/kavia/workspace/code-generation/food-inventory-management-system-162759-162768/food_management_backend/src/api/main.py", "pattern": "/^def _maybe_create_expiry_notification(food: Food) -> None:$/", "language": "Python", "typeref": "typename:None", "kind": "function", "signature": "(food: Food)"}, {"_type": "tag", "name": "access_token", "path": "/home/kavia/workspace/code-generation/food-inventory-management-system-162759-162768/food_management_backend/src/api/main.py", "pattern": "/^    access_token: str = Field(..., description=\"JWT access token\")$/", "language": "Python", "typeref": "typename:str", "kind": "variable", "scope": "Token", "scopeKind": "class"}, {"_type": "tag", "name": "acknowledge_notification", "path": "/home/kavia/workspace/code-generation/food-inventory-management-system-162759-162768/food_management_backend/src/api/main.py", "pattern": "/^    def acknowledge_notification(self, notification_id: str, owner_id: str) -> Optional[ExpiryNo/", "language": "Python", "typeref": "typename:Optional[ExpiryNotification]", "kind": "member", "signature": "(self, notification_id: str, owner_id: str)", "scope": "InMemoryDB", "scopeKind": "class"}, {"_type": "tag", "name": "acknowledge_notification", "path": "/home/kavia/workspace/code-generation/food-inventory-management-system-162759-162768/food_management_backend/src/api/main.py", "pattern": "/^def acknowledge_notification($/", "language": "Python", "typeref": "typename:ExpiryNotification", "kind": "function", "signature": "( notification_id: str = Path(..., description=\"Notification id\"), body: NotificationAckRequest = None, current_user: UserInDB = Depends(get_current_user), )"}, {"_type": "tag", "name": "acknowledged", "path": "/home/kavia/workspace/code-generation/food-inventory-management-system-162759-162768/food_management_backend/src/api/main.py", "pattern": "/^    acknowledged: bool = Field(..., description=\"Set true to acknowledge notification\")$/", "language": "Python", "typeref": "typename:bool", "kind": "variable", "scope": "NotificationAckRequest", "scopeKind": "class"}, {"_type": "tag", "name": "acknowledged", "path": "/home/kavia/workspace/code-generation/food-inventory-management-system-162759-162768/food_management_backend/src/api/main.py", "pattern": "/^    acknowledged: bool = Field(..., description=\"Whether the user acknowledged the notification\"/", "language": "Python", "typeref": "typename:bool", "kind": "variable", "scope": "ExpiryNotification", "scopeKind": "class"}, {"_type": "tag", "name": "app", "path": "/home/kavia/workspace/code-generation/food-inventory-management-system-162759-162768/food_management_backend/src/api/main.py", "pattern": "/^app = FastAPI($/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "category", "path": "/home/kavia/workspace/code-generation/food-inventory-management-system-162759-162768/food_management_backend/src/api/main.py", "pattern": "/^    category: Optional[str] = Field(None, description=\"Category, e.g., 'Dairy', 'Vegetables'\")$/", "language": "Python", "typeref": "typename:Optional[str]", "kind": "variable", "scope": "FoodBase", "scopeKind": "class"}, {"_type": "tag", "name": "category", "path": "/home/kavia/workspace/code-generation/food-inventory-management-system-162759-162768/food_management_backend/src/api/main.py", "pattern": "/^    category: Optional[str] = Field(None, description=\"Category\")$/", "language": "Python", "typeref": "typename:Optional[str]", "kind": "variable", "scope": "FoodUpdate", "scopeKind": "class"}, {"_type": "tag", "name": "create_access_token", "path": "/home/kavia/workspace/code-generation/food-inventory-management-system-162759-162768/food_management_backend/src/api/main.py", "pattern": "/^def create_access_token(data: dict, expires_delta: Optional[timedelta] = None) -> str:$/", "language": "Python", "typeref": "typename:str", "kind": "function", "signature": "(data: dict, expires_delta: Optional[timedelta] = None)"}, {"_type": "tag", "name": "create_food", "path": "/home/kavia/workspace/code-generation/food-inventory-management-system-162759-162768/food_management_backend/src/api/main.py", "pattern": "/^    def create_food(self, owner_id: str, data: FoodCreate) -> Food:$/", "language": "Python", "typeref": "typename:Food", "kind": "member", "signature": "(self, owner_id: str, data: FoodCreate)", "scope": "InMemoryDB", "scopeKind": "class"}, {"_type": "tag", "name": "create_food", "path": "/home/kavia/workspace/code-generation/food-inventory-management-system-162759-162768/food_management_backend/src/api/main.py", "pattern": "/^def create_food(food: FoodCreate, current_user: UserInDB = Depends(get_current_user)) -> Food:$/", "language": "Python", "typeref": "typename:Food", "kind": "function", "signature": "(food: FoodCreate, current_user: UserInDB = Depends(get_current_user))"}, {"_type": "tag", "name": "create_notification", "path": "/home/kavia/workspace/code-generation/food-inventory-management-system-162759-162768/food_management_backend/src/api/main.py", "pattern": "/^    def create_notification(self, owner_id: str, food_id: str, message: str, due_date: date) -> /", "language": "Python", "typeref": "typename:ExpiryNotification", "kind": "member", "signature": "(self, owner_id: str, food_id: str, message: str, due_date: date)", "scope": "InMemoryDB", "scopeKind": "class"}, {"_type": "tag", "name": "create_user", "path": "/home/kavia/workspace/code-generation/food-inventory-management-system-162759-162768/food_management_backend/src/api/main.py", "pattern": "/^    def create_user(self, email: str, full_name: Optional[str], hashed_password: str) -> UserInD/", "language": "Python", "typeref": "typename:UserInDB", "kind": "member", "signature": "(self, email: str, full_name: Optional[str], hashed_password: str)", "scope": "InMemoryDB", "scopeKind": "class"}, {"_type": "tag", "name": "created_at", "path": "/home/kavia/workspace/code-generation/food-inventory-management-system-162759-162768/food_management_backend/src/api/main.py", "pattern": "/^    created_at: datetime = Field(..., description=\"Creation timestamp\")$/", "language": "Python", "typeref": "typename:datetime", "kind": "variable", "scope": "ExpiryNotification", "scopeKind": "class"}, {"_type": "tag", "name": "created_at", "path": "/home/kavia/workspace/code-generation/food-inventory-management-system-162759-162768/food_management_backend/src/api/main.py", "pattern": "/^    created_at: datetime = Field(..., description=\"Creation timestamp\")$/", "language": "Python", "typeref": "typename:datetime", "kind": "variable", "scope": "Food", "scopeKind": "class"}, {"_type": "tag", "name": "db", "path": "/home/kavia/workspace/code-generation/food-inventory-management-system-162759-162768/food_management_backend/src/api/main.py", "pattern": "/^db = InMemoryDB()$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "delete_food", "path": "/home/kavia/workspace/code-generation/food-inventory-management-system-162759-162768/food_management_backend/src/api/main.py", "pattern": "/^    def delete_food(self, food_id: str) -> bool:$/", "language": "Python", "typeref": "typename:bool", "kind": "member", "signature": "(self, food_id: str)", "scope": "InMemoryDB", "scopeKind": "class"}, {"_type": "tag", "name": "delete_food", "path": "/home/kavia/workspace/code-generation/food-inventory-management-system-162759-162768/food_management_backend/src/api/main.py", "pattern": "/^def delete_food($/", "language": "Python", "typeref": "typename:None", "kind": "function", "signature": "( food_id: str, current_user: UserInDB = Depends(get_current_user), )"}, {"_type": "tag", "name": "due_date", "path": "/home/kavia/workspace/code-generation/food-inventory-management-system-162759-162768/food_management_backend/src/api/main.py", "pattern": "/^    due_date: date = Field(..., description=\"The date when the item is due\\/expiring\")$/", "language": "Python", "typeref": "typename:date", "kind": "variable", "scope": "ExpiryNotification", "scopeKind": "class"}, {"_type": "tag", "name": "email", "path": "/home/kavia/workspace/code-generation/food-inventory-management-system-162759-162768/food_management_backend/src/api/main.py", "pattern": "/^    email: EmailStr = Field(..., description=\"User email address\")$/", "language": "Python", "typeref": "typename:EmailStr", "kind": "variable", "scope": "UserBase", "scopeKind": "class"}, {"_type": "tag", "name": "expired_items", "path": "/home/kavia/workspace/code-generation/food-inventory-management-system-162759-162768/food_management_backend/src/api/main.py", "pattern": "/^    expired_items: int = Field(..., description=\"How many items already expired\")$/", "language": "Python", "typeref": "typename:int", "kind": "variable", "scope": "ReportSummary", "scopeKind": "class"}, {"_type": "tag", "name": "expiry_date", "path": "/home/kavia/workspace/code-generation/food-inventory-management-system-162759-162768/food_management_backend/src/api/main.py", "pattern": "/^    expiry_date: Optional[date] = Field(None, description=\"Expiry date of the item (YYYY-MM-DD)\"/", "language": "Python", "typeref": "typename:Optional[date]", "kind": "variable", "scope": "FoodBase", "scopeKind": "class"}, {"_type": "tag", "name": "expiry_date", "path": "/home/kavia/workspace/code-generation/food-inventory-management-system-162759-162768/food_management_backend/src/api/main.py", "pattern": "/^    expiry_date: Optional[date] = Field(None, description=\"Expiry date of the item (YYYY-MM-DD)\"/", "language": "Python", "typeref": "typename:Optional[date]", "kind": "variable", "scope": "FoodUpdate", "scopeKind": "class"}, {"_type": "tag", "name": "food_id", "path": "/home/kavia/workspace/code-generation/food-inventory-management-system-162759-162768/food_management_backend/src/api/main.py", "pattern": "/^    food_id: str = Field(..., description=\"Related food item id\")$/", "language": "Python", "typeref": "typename:str", "kind": "variable", "scope": "ExpiryNotification", "scopeKind": "class"}, {"_type": "tag", "name": "full_name", "path": "/home/kavia/workspace/code-generation/food-inventory-management-system-162759-162768/food_management_backend/src/api/main.py", "pattern": "/^    full_name: Optional[str] = Field(None, description=\"User's full name\")$/", "language": "Python", "typeref": "typename:Optional[str]", "kind": "variable", "scope": "UserBase", "scopeKind": "class"}, {"_type": "tag", "name": "get_current_user", "path": "/home/kavia/workspace/code-generation/food-inventory-management-system-162759-162768/food_management_backend/src/api/main.py", "pattern": "/^def get_current_user(token: str = Depends(oauth2_scheme)) -> UserInDB:$/", "language": "Python", "typeref": "typename:UserInDB", "kind": "function", "signature": "(token: str = Depends(oauth2_scheme))"}, {"_type": "tag", "name": "get_food", "path": "/home/kavia/workspace/code-generation/food-inventory-management-system-162759-162768/food_management_backend/src/api/main.py", "pattern": "/^    def get_food(self, food_id: str) -> Optional[Food]:$/", "language": "Python", "typeref": "typename:Optional[Food]", "kind": "member", "signature": "(self, food_id: str)", "scope": "InMemoryDB", "scopeKind": "class"}, {"_type": "tag", "name": "get_food", "path": "/home/kavia/workspace/code-generation/food-inventory-management-system-162759-162768/food_management_backend/src/api/main.py", "pattern": "/^def get_food($/", "language": "Python", "typeref": "typename:Food", "kind": "function", "signature": "( food_id: str = Path(..., description=\"ID of the food item\"), current_user: UserInDB = Depends(get_current_user), )"}, {"_type": "tag", "name": "get_password_hash", "path": "/home/kavia/workspace/code-generation/food-inventory-management-system-162759-162768/food_management_backend/src/api/main.py", "pattern": "/^def get_password_hash(password: str) -> str:$/", "language": "Python", "typeref": "typename:str", "kind": "function", "signature": "(password: str)"}, {"_type": "tag", "name": "get_summary_report", "path": "/home/kavia/workspace/code-generation/food-inventory-management-system-162759-162768/food_management_backend/src/api/main.py", "pattern": "/^def get_summary_report(current_user: UserInDB = Depends(get_current_user)) -> ReportSummary:$/", "language": "Python", "typeref": "typename:ReportSummary", "kind": "function", "signature": "(current_user: UserInDB = Depends(get_current_user))"}, {"_type": "tag", "name": "get_user", "path": "/home/kavia/workspace/code-generation/food-inventory-management-system-162759-162768/food_management_backend/src/api/main.py", "pattern": "/^    def get_user(self, user_id: str) -> Optional[UserInDB]:$/", "language": "Python", "typeref": "typename:Optional[UserInDB]", "kind": "member", "signature": "(self, user_id: str)", "scope": "InMemoryDB", "scopeKind": "class"}, {"_type": "tag", "name": "get_user_by_email", "path": "/home/kavia/workspace/code-generation/food-inventory-management-system-162759-162768/food_management_backend/src/api/main.py", "pattern": "/^    def get_user_by_email(self, email: str) -> Optional[UserInDB]:$/", "language": "Python", "typeref": "typename:Optional[UserInDB]", "kind": "member", "signature": "(self, email: str)", "scope": "InMemoryDB", "scopeKind": "class"}, {"_type": "tag", "name": "hashed_password", "path": "/home/kavia/workspace/code-generation/food-inventory-management-system-162759-162768/food_management_backend/src/api/main.py", "pattern": "/^    hashed_password: str = Field(..., description=\"Hashed user password\")$/", "language": "Python", "typeref": "typename:str", "kind": "variable", "scope": "UserInDB", "scopeKind": "class"}, {"_type": "tag", "name": "health_check", "path": "/home/kavia/workspace/code-generation/food-inventory-management-system-162759-162768/food_management_backend/src/api/main.py", "pattern": "/^def health_check() -> Dict[str, str]:$/", "language": "Python", "typeref": "typename:Dict[str,str]", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "id", "path": "/home/kavia/workspace/code-generation/food-inventory-management-system-162759-162768/food_management_backend/src/api/main.py", "pattern": "/^    id: str = Field(..., description=\"Unique identifier for the food item\")$/", "language": "Python", "typeref": "typename:str", "kind": "variable", "scope": "Food", "scopeKind": "class"}, {"_type": "tag", "name": "id", "path": "/home/kavia/workspace/code-generation/food-inventory-management-system-162759-162768/food_management_backend/src/api/main.py", "pattern": "/^    id: str = Field(..., description=\"Unique identifier for the notification\")$/", "language": "Python", "typeref": "typename:str", "kind": "variable", "scope": "ExpiryNotification", "scopeKind": "class"}, {"_type": "tag", "name": "id", "path": "/home/kavia/workspace/code-generation/food-inventory-management-system-162759-162768/food_management_backend/src/api/main.py", "pattern": "/^    id: str = Field(..., description=\"Unique user identifier\")$/", "language": "Python", "typeref": "typename:str", "kind": "variable", "scope": "User", "scopeKind": "class"}, {"_type": "tag", "name": "items_by_category", "path": "/home/kavia/workspace/code-generation/food-inventory-management-system-162759-162768/food_management_backend/src/api/main.py", "pattern": "/^    items_by_category: Dict[str, int] = Field(..., description=\"Count of items grouped by catego/", "language": "Python", "typeref": "typename:Dict[str, int]", "kind": "variable", "scope": "ReportSummary", "scopeKind": "class"}, {"_type": "tag", "name": "items_expiring_within_7_days", "path": "/home/kavia/workspace/code-generation/food-inventory-management-system-162759-162768/food_management_backend/src/api/main.py", "pattern": "/^    items_expiring_within_7_days: int = Field(..., description=\"How many items expiring within 7/", "language": "Python", "typeref": "typename:int", "kind": "variable", "scope": "ReportSummary", "scopeKind": "class"}, {"_type": "tag", "name": "list_expiry_notifications", "path": "/home/kavia/workspace/code-generation/food-inventory-management-system-162759-162768/food_management_backend/src/api/main.py", "pattern": "/^def list_expiry_notifications($/", "language": "Python", "typeref": "typename:List[ExpiryNotification]", "kind": "function", "signature": "( only_pending: bool = Query(True, description=\"Filter only pending (unacknowledged) notifications\"), current_user: UserInDB = Depends(get_current_user), )"}, {"_type": "tag", "name": "list_food", "path": "/home/kavia/workspace/code-generation/food-inventory-management-system-162759-162768/food_management_backend/src/api/main.py", "pattern": "/^def list_food($/", "language": "Python", "typeref": "typename:List[Food]", "kind": "function", "signature": "( q: Optional[str] = Query(None, description=\"Search term on name\"), category: Optional[str] = Query(None, description=\"Filter by category\"), location: Optional[str] = Query(None, description=\"Filter by storage location\"), expiring_before: Optional[date] = Query(None, description=\"Filter by expiry date upper bound (YYYY-MM-DD)\"), skip: int = Query(0, ge=0, description=\"Pagination offset\"), limit: int = Query(50, ge=1, le=200, description=\"Pagination limit\"), current_user: UserInDB = Depends(get_current_user), )"}, {"_type": "tag", "name": "list_foods", "path": "/home/kavia/workspace/code-generation/food-inventory-management-system-162759-162768/food_management_backend/src/api/main.py", "pattern": "/^    def list_foods($/", "language": "Python", "typeref": "typename:List[Food]", "kind": "member", "signature": "( self, owner_id: str, q: Optional[str] = None, category: Optional[str] = None, location: Optional[str] = None, expiring_before: Optional[date] = None, skip: int = 0, limit: int = 50, )", "scope": "InMemoryDB", "scopeKind": "class"}, {"_type": "tag", "name": "list_notifications", "path": "/home/kavia/workspace/code-generation/food-inventory-management-system-162759-162768/food_management_backend/src/api/main.py", "pattern": "/^    def list_notifications(self, owner_id: str, only_pending: bool = True) -> List[ExpiryNotific/", "language": "Python", "typeref": "typename:List[ExpiryNotification]", "kind": "member", "signature": "(self, owner_id: str, only_pending: bool = True)", "scope": "InMemoryDB", "scopeKind": "class"}, {"_type": "tag", "name": "location", "path": "/home/kavia/workspace/code-generation/food-inventory-management-system-162759-162768/food_management_backend/src/api/main.py", "pattern": "/^    location: Optional[str] = Field(None, description=\"Storage location, e.g., 'Fridge', 'Pantry/", "language": "Python", "typeref": "typename:Optional[str]", "kind": "variable", "scope": "FoodBase", "scopeKind": "class"}, {"_type": "tag", "name": "location", "path": "/home/kavia/workspace/code-generation/food-inventory-management-system-162759-162768/food_management_backend/src/api/main.py", "pattern": "/^    location: Optional[str] = Field(None, description=\"Storage location\")$/", "language": "Python", "typeref": "typename:Optional[str]", "kind": "variable", "scope": "FoodUpdate", "scopeKind": "class"}, {"_type": "tag", "name": "login_for_access_token", "path": "/home/kavia/workspace/code-generation/food-inventory-management-system-162759-162768/food_management_backend/src/api/main.py", "pattern": "/^def login_for_access_token(form_data: OAuth2PasswordRequestForm = Depends()) -> Token:$/", "language": "Python", "typeref": "typename:Token", "kind": "function", "signature": "(form_data: OAuth2PasswordRequestForm = Depends())"}, {"_type": "tag", "name": "message", "path": "/home/kavia/workspace/code-generation/food-inventory-management-system-162759-162768/food_management_backend/src/api/main.py", "pattern": "/^    message: str = Field(..., description=\"Human readable notification message\")$/", "language": "Python", "typeref": "typename:str", "kind": "variable", "scope": "ExpiryNotification", "scopeKind": "class"}, {"_type": "tag", "name": "name", "path": "/home/kavia/workspace/code-generation/food-inventory-management-system-162759-162768/food_management_backend/src/api/main.py", "pattern": "/^    name: Optional[str] = Field(None, description=\"Name of the food item\")$/", "language": "Python", "typeref": "typename:Optional[str]", "kind": "variable", "scope": "FoodUpdate", "scopeKind": "class"}, {"_type": "tag", "name": "name", "path": "/home/kavia/workspace/code-generation/food-inventory-management-system-162759-162768/food_management_backend/src/api/main.py", "pattern": "/^    name: str = Field(..., description=\"Name of the food item\")$/", "language": "Python", "typeref": "typename:str", "kind": "variable", "scope": "FoodBase", "scopeKind": "class"}, {"_type": "tag", "name": "notes", "path": "/home/kavia/workspace/code-generation/food-inventory-management-system-162759-162768/food_management_backend/src/api/main.py", "pattern": "/^    notes: Optional[str] = Field(None, description=\"Additional notes or description\")$/", "language": "Python", "typeref": "typename:Optional[str]", "kind": "variable", "scope": "FoodBase", "scopeKind": "class"}, {"_type": "tag", "name": "notes", "path": "/home/kavia/workspace/code-generation/food-inventory-management-system-162759-162768/food_management_backend/src/api/main.py", "pattern": "/^    notes: Optional[str] = Field(None, description=\"Additional notes or description\")$/", "language": "Python", "typeref": "typename:Optional[str]", "kind": "variable", "scope": "FoodUpdate", "scopeKind": "class"}, {"_type": "tag", "name": "oauth2_scheme", "path": "/home/kavia/workspace/code-generation/food-inventory-management-system-162759-162768/food_management_backend/src/api/main.py", "pattern": "/^oauth2_scheme = OAuth2PasswordBearer(tokenUrl=\"\\/auth\\/token\")$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "owner_id", "path": "/home/kavia/workspace/code-generation/food-inventory-management-system-162759-162768/food_management_backend/src/api/main.py", "pattern": "/^    owner_id: str = Field(..., description=\"Identifier of the user who owns this item\")$/", "language": "Python", "typeref": "typename:str", "kind": "variable", "scope": "Food", "scopeKind": "class"}, {"_type": "tag", "name": "owner_id", "path": "/home/kavia/workspace/code-generation/food-inventory-management-system-162759-162768/food_management_backend/src/api/main.py", "pattern": "/^    owner_id: str = Field(..., description=\"User id of owner\")$/", "language": "Python", "typeref": "typename:str", "kind": "variable", "scope": "ExpiryNotification", "scopeKind": "class"}, {"_type": "tag", "name": "password", "path": "/home/kavia/workspace/code-generation/food-inventory-management-system-162759-162768/food_management_backend/src/api/main.py", "pattern": "/^    password: str = Field(..., min_length=6, description=\"Plain text password for signup\")$/", "language": "Python", "typeref": "typename:str", "kind": "variable", "scope": "UserCreate", "scopeKind": "class"}, {"_type": "tag", "name": "pwd_context", "path": "/home/kavia/workspace/code-generation/food-inventory-management-system-162759-162768/food_management_backend/src/api/main.py", "pattern": "/^pwd_context = CryptContext(schemes=[\"bcrypt\"], deprecated=\"auto\")$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "quantity", "path": "/home/kavia/workspace/code-generation/food-inventory-management-system-162759-162768/food_management_backend/src/api/main.py", "pattern": "/^    quantity: Optional[float] = Field(None, description=\"Quantity of the food item\")$/", "language": "Python", "typeref": "typename:Optional[float]", "kind": "variable", "scope": "FoodUpdate", "scopeKind": "class"}, {"_type": "tag", "name": "quantity", "path": "/home/kavia/workspace/code-generation/food-inventory-management-system-162759-162768/food_management_backend/src/api/main.py", "pattern": "/^    quantity: float = Field(..., description=\"Quantity of the food item (units depend on unit)\")$/", "language": "Python", "typeref": "typename:float", "kind": "variable", "scope": "FoodBase", "scopeKind": "class"}], "hash": "6acbbce406b997590cad44cd099d241f", "format-version": 4, "code-base-name": "food_management_backend", "filename": "food_management_backend/src/api/main.py", "fields": [{"name": "APP_DESCRIPTION = (", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "APP_TITLE = \"Food Inventory Management API\"", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "APP_VERSION = \"1.0.0\"", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "EXPIRY_THRESHOLD_DAYS = int(os.getenv(\"EXPIRY_THRESHOLD_DAYS\", \"7\"))", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "JWT_ACCESS_TOKEN_EXPIRE_MINUTES = int(os.getenv(\"JWT_ACCESS_TOKEN_EXPIRE_MINUTES\", \"60\"))", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "JWT_ALGORITHM = os.getenv(\"JWT_ALGORITHM\", \"HS256\")", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "JWT_SECRET_KEY = os.getenv(\"JWT_SECRET_KEY\", \"dev-secret-change-in-production\")", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "str access_token", "scope": "Token", "scopeKind": "class", "description": "unavailable"}, {"name": "bool acknowledged", "scope": "NotificationAckRequest", "scopeKind": "class", "description": "unavailable"}, {"name": "app = FastAPI(", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "Optional[str] category", "scope": "FoodBase", "scopeKind": "class", "description": "unavailable"}, {"name": "datetime created_at", "scope": "ExpiryNotification", "scopeKind": "class", "description": "unavailable"}, {"name": "db = InMemoryDB()", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "date due_date", "scope": "ExpiryNotification", "scopeKind": "class", "description": "unavailable"}, {"name": "EmailStr email", "scope": "UserBase", "scopeKind": "class", "description": "unavailable"}, {"name": "int expired_items", "scope": "ReportSummary", "scopeKind": "class", "description": "unavailable"}, {"name": "Optional[date] expiry_date", "scope": "FoodBase", "scopeKind": "class", "description": "unavailable"}, {"name": "str food_id", "scope": "ExpiryNotification", "scopeKind": "class", "description": "unavailable"}, {"name": "Optional[str] full_name", "scope": "UserBase", "scopeKind": "class", "description": "unavailable"}, {"name": "str hashed_password", "scope": "UserInDB", "scopeKind": "class", "description": "unavailable"}, {"name": "str id", "scope": "Food", "scopeKind": "class", "description": "unavailable"}, {"name": "Dict[str, int] items_by_category", "scope": "ReportSummary", "scopeKind": "class", "description": "unavailable"}, {"name": "int items_expiring_within_7_days", "scope": "ReportSummary", "scopeKind": "class", "description": "unavailable"}, {"name": "Optional[str] location", "scope": "FoodBase", "scopeKind": "class", "description": "unavailable"}, {"name": "str message", "scope": "ExpiryNotification", "scopeKind": "class", "description": "unavailable"}, {"name": "Optional[str] name", "scope": "FoodUpdate", "scopeKind": "class", "description": "unavailable"}, {"name": "str name", "scope": "FoodBase", "scopeKind": "class", "description": "unavailable"}, {"name": "Optional[str] notes", "scope": "FoodBase", "scopeKind": "class", "description": "unavailable"}, {"name": "oauth2_scheme = OAuth2PasswordBearer(tokenUrl=\"\\/auth\\/token\")", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "str owner_id", "scope": "Food", "scopeKind": "class", "description": "unavailable"}, {"name": "str password", "scope": "UserCreate", "scopeKind": "class", "description": "unavailable"}, {"name": "pwd_context = CryptContext(schemes=[\"bcrypt\"], deprecated=\"auto\")", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "Optional[float] quantity", "scope": "FoodUpdate", "scopeKind": "class", "description": "unavailable"}, {"name": "float quantity", "scope": "FoodBase", "scopeKind": "class", "description": "unavailable"}]}